name: Build (Linux/macOS/Windows)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  multi-platform-build:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install SDL2 via vcpkg (macOS)
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          pkgs: sdl2
          triplet: x64-osx-release
          token: ${{ github.token }}
          github-binarycache: false
        if: matrix.os == 'macos-latest'

      - name: Install SDL2 via vcpkg (Linux and Windows)
        run: vcpkg install sdl2 --binarysource="clear;x-gha,readwrite"
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'

      - name: Configure with CMake (Linux)
        run: |
          cmake -S ${{github.workspace}} -B build \
          -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake
        if: matrix.os == 'ubuntu-latest'

      - name: Configure with CMake (macOS)
        run: |
          cmake -S ${{github.workspace}} -B build \
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_TARGET_TRIPLET=x64-osx -DVCPKG_MANIFEST_MODE=OFF
        if: matrix.os == 'macos-latest'

      - name: Configure with CMake (Windows)
        run: |
          cmake -S ${{github.workspace}} -B build -DCMAKE_TOOLCHAIN_FILE="$Env:VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
        if: matrix.os == 'windows-latest'

      - name: Build
        run: cmake --build build
